/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./themes/src/assets/js/slideshow-details.js":
/*!***************************************************!*\
  !*** ./themes/src/assets/js/slideshow-details.js ***!
  \***************************************************/
/***/ (() => {

eval("\n\n/////////////////\n// Gallery Sliders\nvar slider = function slider(numberOfSlideShow) {\n  var slides = document.querySelectorAll('.slide');\n  //const dotContainer = document.querySelector('.dots');\n  var slideContainer = document.querySelector(\".slider--\".concat(numberOfSlideShow));\n  var slideOfOneSlider = slideContainer.querySelectorAll('.slide');\n  var dotContainer = document.querySelectorAll('.dots');\n  dotContainer.forEach(function (cur, i) {\n    cur.classList.add(\"dotContainer--\".concat(i));\n  });\n  var currentDotContainer = document.querySelector(\".dotContainer--\".concat(numberOfSlideShow));\n  var curSlide = 0;\n  var maxSlide = slideOfOneSlider.length;\n\n  // creating Dots and active Dot\n  var createDots = function createDots() {\n    for (var i = 0; i < maxSlide; i++) {\n      currentDotContainer.insertAdjacentHTML('beforeend', \"<button class=\\\"dots__dot\\\" data-slide=\\\"\".concat(i, \"\\\"></button>\"));\n    }\n  };\n  var activateDot = function activateDot(slide) {\n    var dots = currentDotContainer.querySelectorAll('.dots__dot');\n    var dotActive = currentDotContainer.querySelector(\".dots__dot[data-slide=\\\"\".concat(slide, \"\\\"]\"));\n    dots.forEach(function (dot) {\n      return dot.classList.remove('.dots__dot--active');\n    });\n    dots.forEach(function (dot) {\n      return dot.style.backgroundColor = '#5b5b5b';\n    });\n    dotActive.classList.add('.dots__dot--active');\n    dotActive.style.backgroundColor = 'white';\n  };\n\n  // go to slide\n  var goToSlide = function goToSlide(slide) {\n    slideOfOneSlider.forEach(function (s, i) {\n      return s.style.transform = \"translateX(\".concat(100 * (i - slide), \"%)\");\n    });\n  };\n\n  // next slide\n  var nextSlide = function nextSlide() {\n    if (curSlide === maxSlide - 1) {\n      curSlide = 0;\n    } else {\n      curSlide++;\n    }\n    goToSlide(curSlide);\n    activateDot(curSlide);\n  };\n\n  // previous slide\n  var prevSlide = function prevSlide() {\n    if (curSlide === 0) {\n      curSlide = maxSlide - 1;\n    } else {\n      curSlide--;\n    }\n    goToSlide(curSlide);\n    activateDot(curSlide);\n  };\n  var init = function init() {\n    goToSlide(0);\n    createDots();\n    activateDot(curSlide);\n  };\n  init();\n  document.addEventListener('keydown', function (e) {\n    if (e.key === 'ArrowLeft') prevSlide();\n    if (e.key === 'ArrowRight') nextSlide();\n  });\n  currentDotContainer.addEventListener('click', function (e) {\n    if (e.target.classList.contains('dots__dot')) {\n      var slide = e.target.dataset.slide;\n      goToSlide(slide);\n      activateDot(slide);\n    }\n  });\n\n  ///// starting Slider when hovering, stopping when non-hovering\n  var sliderInterval;\n  var startRotation = function startRotation() {\n    if (!sliderInterval) {\n      sliderInterval = setInterval(nextSlide, 750);\n    }\n  };\n  var stopRotation = function stopRotation() {\n    clearInterval(sliderInterval);\n    sliderInterval = null;\n  };\n  /*\r\n      const slidesNoLightbox = document.querySelector(`.slider--${numberOfSlideShow} .big`)\r\n      console.log(slidesNoLightbox)\r\n  */\n\n  slideContainer.addEventListener('mouseover', startRotation);\n  slideContainer.addEventListener('mouseout', stopRotation);\n  slideContainer.addEventListener('click', stopRotation);\n  slideContainer.addEventListener('mouseover', function () {\n    slideContainer.style.cursor = 'pointer';\n  });\n};\nvar sliderExists = document.querySelector('.slider__gallery') || false;\nif (sliderExists) {\n  document.querySelectorAll('.slider__gallery').forEach(function (cur, i) {\n    cur.classList.add(\"slider--\".concat(i));\n    slider(i);\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./themes/src/assets/js/slideshow-details.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./themes/src/assets/js/slideshow-details.js"]();
/******/ 	
/******/ })()
;